{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search.component.jsx","index.js"],"names":["Card","props","className","key","monster","id","src","alt","name","email","CardList","monsters","map","SearchForm","placeholder","handleChange","type","onChange","App","userData","a","axios","get","userInfo","data","event","preventDefault","state","searchName","this","then","setState","catch","err","console","log","message","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","ReactDOM","render","document","getElementById"],"mappings":"0VAIaA,G,MAAO,SAAAC,GAChB,OAAO,yBAAKC,UAAU,iBAAiBC,IAAKF,EAAMG,QAAQC,IACtD,yBAAKC,IAAG,mCAA8BL,EAAMG,QAAQC,GAA5C,aAA2DE,IAAI,oBACvE,4BAAKN,EAAMG,QAAQI,MACnB,4BAAKP,EAAMG,QAAQK,UCFdC,G,MAAW,SAAAT,GACpB,OACI,yBAAKC,UAAU,aACVD,EAAMU,SAASC,KAAI,SAAAR,GAAO,OAAI,kBAAC,EAAD,CAAMA,QAASA,UCL7CS,G,MAAa,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAClC,OACM,6BACQ,2BAAOC,KAAK,SAASd,UAAU,SAASY,YAAaA,EAAaG,SAAUF,OCE1FG,G,wDACF,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IAITkB,SALkB,sBAKP,4BAAAC,EAAA,sEACaC,IAAMC,IAAI,8CADvB,cACJC,EADI,yBAEDA,EAASC,MAFR,2CALO,EAUnBT,aAAe,SAACU,GACbA,EAAMC,kBATL,EAAKC,MAAQ,CAAEhB,SAAU,GACzBiB,WAAY,IAHG,E,gEAeE,IAAD,OAEhBC,KAAKV,WAAWW,MAAK,SAAAN,GAAI,OAAI,EAAKO,SAAS,CAACpB,SAAUa,OACjDQ,OAAM,SAAAC,GAASC,QAAQC,IAAI,QAASF,EAAIG,gB,+BAGvC,IAAD,SACyBP,KAAKF,MAA7BhB,EADD,EACCA,SAAUiB,EADX,EACWA,WACXS,EAAmB1B,EAAS2B,QAAO,SAAAlC,GAAO,OAC5CA,EAAQI,KAAK+B,cAAcC,SAASZ,EAAWW,kBAE9C,OACI,yBAAKrC,UAAU,OACX,kBAAC,EAAD,CAAYY,YAAY,eAAeC,aAAc,SAAA0B,GAAC,OAAI,EAAKV,SAAS,CAACH,WAAYa,EAAEC,OAAOC,WACrG,kBAAC,EAAD,CAAUhC,SAAU0B,S,GA9BfO,cAoClBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.e1832675.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.component.css';\r\n\r\nexport const Card = props =>{\r\n    return <div className='card-container' key={props.monster.id}>\r\n        <img src={`https://www.robohash.org/${props.monster.id}?set=set2`} alt=\"no source found\"/>\r\n        <h2>{props.monster.name}</h2>\r\n        <h2>{props.monster.email}</h2>\r\n    </div>;\r\n};","import React from 'react';\r\nimport {Card} from '../card/card.component'\r\n\r\n\r\nimport './card-list.component.css';\r\n\r\nexport const CardList = props =>{\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => <Card monster={monster}/>)}\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nimport './search.component.css';\r\n\r\nexport const SearchForm = ({placeholder,handleChange}) => {\r\n      return (\r\n            <div>\r\n                    <input type='search' className='search' placeholder={placeholder} onChange={handleChange}/>\r\n            </div>\r\n            );\r\n };\r\n\r\n","import React,{Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport {CardList} from './components/card-list/card-list.component';\r\nimport {SearchForm} from './components/search-box/search.component';\r\n\r\nimport './app.css';\r\n\r\n\r\nclass App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { monsters: [],\r\n        searchName: ''};\r\n    }\r\n     userData = async() =>{\r\n        let userInfo = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        return userInfo.data;\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n       event.preventDefault();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.userData().then(data => this.setState({monsters: data}))\r\n            .catch(err => { console.log(\"Error\"+ err.message())});\r\n    }\r\n\r\n    render() {\r\n       const {monsters, searchName} = this.state;\r\n       const filteredMonsters = monsters.filter(monster =>\r\n           monster.name.toLowerCase().includes(searchName.toLowerCase())\r\n       );\r\n            return (\r\n                <div className='App'>\r\n                    <SearchForm placeholder='search users' handleChange={e => this.setState({searchName: e.target.value})}/>\r\n             <CardList monsters={filteredMonsters} />\r\n            </div>\r\n            );\r\n        }\r\n}\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}